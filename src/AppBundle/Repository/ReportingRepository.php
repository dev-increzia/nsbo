<?php

namespace AppBundle\Repository;

use AppBundle\Entity\Reporting;
use Doctrine\ORM\EntityRepository;

/**
 * ReportingRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ReportingRepository extends EntityRepository
{
    public function count($cityhall = null, $dateBefore = null, $dateAfter = null, $title = null, $category = null, $moderate = null)
    {
        $qb = $this->createQueryBuilder('c');
        $qb->select('COUNT(c)');
        if ($cityhall) {
            $qb->andWhere('c.cityhall = :cityhall')->setParameter('cityhall', $cityhall);
        }
        if ($dateBefore) {
            $dateBefore = substr($dateBefore, 6, 4) . '-' . substr($dateBefore, 3, 2) . '-' . substr($dateBefore, 0, 2) . ' ' . substr($dateBefore, 11, 8);
            $qb->andwhere('c.createAt >= :dateBefore')->setParameter('dateBefore', $dateBefore);
        }
        if ($dateAfter) {
            $dateAfter = substr($dateAfter, 6, 4) . '-' . substr($dateAfter, 3, 2) . '-' . substr($dateAfter, 0, 2) . ' ' . substr($dateAfter, 11, 8);
            $qb->andWhere('c.createAt <= :dateAfter')->setParameter('dateAfter', $dateAfter);
        }
        if ($title) {
            $qb->andWhere('c.title LIKE :title')->setParameter('title', '%' . $title . '%');
        }
        if ($category) {
            $qb->andWhere('c.category = :category')->setParameter('category', $category);
        }
        if ($moderate != '') {
            $qb->andWhere('c.moderate = :moderate')->setParameter('moderate', $moderate);
        }

        return $qb->getQuery()->getSingleScalarResult();
    }

    /**
     * @param $page
     * @param $order
     * @param $cityhall
     * @param $dateBefore
     * @param $dateAfter
     * @param $title
     * @param $category
     * @param $moderate
     * @return Reporting[]
     */
    public function search($page, $order, $cityhall, $dateBefore, $dateAfter, $title, $category, $moderate)
    {
        $qb = $this->createQueryBuilder('c');
        if ($cityhall) {
            $qb->andWhere('c.cityhall = :cityhall')->setParameter('cityhall', $cityhall);
        }
        if ($dateBefore) {
            $dateBefore = substr($dateBefore, 6, 4) . '-' . substr($dateBefore, 3, 2) . '-' . substr($dateBefore, 0, 2) . ' ' . substr($dateBefore, 11, 8);
            $qb->andwhere('c.createAt >= :dateBefore')->setParameter('dateBefore', $dateBefore);
        }
        if ($dateAfter) {
            $dateAfter = substr($dateAfter, 6, 4) . '-' . substr($dateAfter, 3, 2) . '-' . substr($dateAfter, 0, 2) . ' ' . substr($dateAfter, 11, 8);
            $qb->andWhere('c.createAt <= :dateAfter')->setParameter('dateAfter', $dateAfter);
        }
        if ($title) {
            $qb->andWhere('c.title LIKE :title')->setParameter('title', '%' . $title . '%');
        }
        if ($category) {
            $qb->andWhere('c.category = :category')->setParameter('category', $category);
        }
        if ($moderate != '') {
            $qb->andWhere('c.moderate = :moderate')->setParameter('moderate', $moderate);
        }
        if (is_array($order)) {
            foreach ($order as $orderName => $orderType) {
                $qb->orderBy('c.' . $orderName, $orderType);
            }
        }
        $qb->setMaxResults(25)
                ->setFirstResult($page * 25);

        return $qb->getQuery()->getResult();
    }
}
